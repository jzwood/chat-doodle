{"version":3,"sources":["controller.js","draw2.js","utils.js"],"names":["controller","canvas","eventToXY","event","touches","clientX","clientY","handleDrawStart","e","drawState","isDrawing","_eventToXY","_eventToXY2","_slicedToArray","x","y","x1","parseFloat","xOffset","toFixed","decimalLimit","y1","yOffset","x2","y2","handleDrawMove","_eventToXY3","_eventToXY4","handleDrawStop","handleResize","width","window","innerWidth","height","innerHeight","line","ctx","fillStyle","color","beginPath","moveTo","lineTo","closePath","stroke","getContext","lineSet","Set","room","step","this","bgcolor","console","log","lineWidth","lineCap","document","addEventListener","debounce","setBackground","arguments","length","undefined","fillRect","clearBackground","clearRect","setRoom","r","draw","ds","setKey","join","has","socket","emit","add","start","querySelector","ctrl","io","location","pathname","slice","on","data","cx2","MainLoop","setMaxAllowedFPS","setDraw","avg","vals","reduce","a","b","mod","val","base","temp","throttle","func","ms","_arguments","_this","last","t","now","Date","apply","wait","immediate","_this2","_arguments2","timeout","context","args","later","callNow","clearTimeout","setTimeout"],"mappings":"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","file":"main.js","sourcesContent":["function controller(canvas){\n  const ctx = canvas.getContext('2d')\n  let width = window.innerWidth, height = window.innerHeight,\n    xOffset = 0, yOffset = 0,\n    epsilon = 0.01, decimalLimit = 0\n  const lineSet = new Set()\n\n  let room\n\n  const drawState = {x1:0, y1:0, x2: 0, y2: 0, isDrawing: false, step(){\n    this.x1 = this.x2\n    this.y1 = this.y2\n  }}\n\n  let bgcolor = '#ffffff',\n    color = '#000000'\n\n  initCanvas()\n  registerTouchEvents()\n\n\n  function initCanvas(){\n    canvas.width = width\n    canvas.height = height\n\n    console.log(canvas, width, height)\n    ctx.lineWidth = 8\n    ctx.lineCap = 'round'\n  }\n\n  function eventToXY(event){\n    return event.touches ? [event.touches[0].clientX, event.touches[0].clientY] : [event.clientX, event.clientY]\n  }\n\n  function handleDrawStart(e){\n    drawState.isDrawing = true\n    const [x, y] = eventToXY(e)\n    drawState.x1 = parseFloat((x - xOffset).toFixed(decimalLimit))\n    drawState.y1 = parseFloat((y - yOffset).toFixed(decimalLimit))\n    drawState.x2 = parseFloat((x - xOffset).toFixed(decimalLimit))\n    drawState.y2 = parseFloat((y - yOffset).toFixed(decimalLimit))\n  }\n\n  function handleDrawMove(e){\n    const [x, y] = eventToXY(e)\n    drawState.x2 = parseFloat((x - xOffset).toFixed(decimalLimit))\n    drawState.y2 = parseFloat((y - yOffset).toFixed(decimalLimit))\n  }\n\n  function handleDrawStop(e){\n    drawState.isDrawing = false\n  }\n\n  function handleResize(e){\n    width = window.innerWidth\n    height = window.innerHeight\n    xOffset = (width - canvas.width) * 0.5\n    yOffset = (height - canvas.height) * 0\n  }\n\n  function registerTouchEvents(){\n    document.addEventListener('touchstart', handleDrawStart)\n    document.addEventListener('touchmove', handleDrawMove)\n    document.addEventListener('touchend', handleDrawStop)\n    document.addEventListener('mousedown', handleDrawStart)\n    document.addEventListener('mousemove', handleDrawMove)\n    document.addEventListener('mouseup', handleDrawStop)\n    window.addEventListener('resize', debounce(handleResize, 100))\n  }\n\n  function line(x1, y1, x2, y2){\n      ctx.fillStyle = color\n      ctx.beginPath()\n      ctx.moveTo(x1, y1)\n      ctx.lineTo(x2, y2)\n      ctx.closePath()\n      ctx.stroke()\n  }\n\n  return {\n    line,\n    setBackground(color='#ffffff'){\n      console.log('setBackground')\n      bgcolor = color\n      ctx.fillStyle = bgcolor\n      ctx.fillRect(0, 0, width, height)\n      ctx.fillStyle = color\n    },\n    clearBackground(){\n      console.log('clearBackground')\n      ctx.clearRect(0, 0, width, height)\n    },\n    setRoom(r){\n      room = r\n    },\n    draw(){\n      if(drawState.isDrawing){\n        const ds = drawState,\n          setKey = [ds.x1, ds.y1, ds.x2, ds.y2].join(',')\n        if(!lineSet.has(setKey)){\n          socket.emit('pushData', room, {x1:ds.x1, y1:ds.y1, x2:ds.x2, y2:ds.y2})\n          line(ds.x1, ds.y1, ds.x2, ds.y2)\n          lineSet.add(setKey)\n          ds.step()\n        }\n      }\n    }\n  }\n}\n","'use strict'\nvar io, socket\n\ndocument.addEventListener(\"DOMContentLoaded\", e => {\n  start()\n})\n\nfunction start(){\n  const canvas = document.querySelector('.canvas-wrapper__canvas')\n  if (canvas.getContext) {\n    const ctrl = controller(canvas)\n    ctrl.setBackground('#ffffff')\n\n    socket = io('/')\n    let room = window.location.pathname.slice(-40)\n\n    ctrl.setRoom(room)\n\n    socket.emit('init', room)\n\n    socket.on('linePositionData', data => {\n      ctrl.line(data.x1, data.y1, data.x2, data.y2)\n    })\n\n    socket.on('clear', () => {\n      ctrl.clearBackground(cx2, canvas)\n    })\n\n    MainLoop.setMaxAllowedFPS([60]).setDraw(ctrl.draw).start()\n  }\n\n}\n","function avg(vals) {\n  return vals.reduce(function(a, b) {\n    return a + b\n  }, 0) / vals.length\n}\n\n//mod is used for wrapping the diamond coordinates\n//around the grid. The algorithm below returns the\n//positive mod value.\nfunction mod(val, base) {\n  var temp = val % base\n  while (temp <= 0) {\n    temp += base\n  }\n  return temp\n}\n\nfunction throttle(func, ms){\n  let last = 0\n  return () => {\n    const a = arguments, t = this, now = +(new Date)\n    //b/c last = 0 will still run the first time called\n    if(now >= last + ms){\n      last = now\n      func.apply(t, a)\n    }\n  }\n}\n\nfunction debounce(func, wait, immediate) {\n  let timeout\n  return () => {\n    const context = this, args = arguments\n    const later = () => {\n      timeout = null\n      if (!immediate) func.apply(context, args)\n    }\n    const callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) func.apply(context, args)\n  }\n}\n"],"sourceRoot":"/source/"}